@*@model OnlineAdmission.Models.EnclosedDocument*@
@model OnlineAdmission.ModelView.DocumentsViewModel
@{
    ViewBag.Title = "Edit";
}
<br />
<br />
<ul id="tabstrip" class="nav nav-tabs" role="tablist">
    <li><a href="/Applications/Index" role="tab">Personal Information</a></li>
    <li><a href="/EducationDetails/Index" role="tab">Educational Details</a></li>
    <li class="active"><a href="/EnclosedDocuments/Index" role="tab">Enclosed Documents</a></li>
</ul>

<br />
<br />
<h3>Edit</h3>


@using (Html.BeginForm("Edit", "EnclosedDocuments", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>EnclosedDocument</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @*<div class="form-group">
                @Html.LabelFor(model => model.ApplicationId, "ApplicationId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ApplicationId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApplicationId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="DocumentFile" accept="file/x-pdf,file/pdf,file/txt" />
                @Html.ValidationMessageFor(model => model.DocumentFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-primary" value="Save" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
